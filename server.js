// Generated by CoffeeScript 1.10.0

/*
  Create Proxy server
 */

(function() {
  var deletePattern, fs, getPaterns, httpProxy, ref, setPattern;

  ref = require('./configs'), getPaterns = ref.getPaterns, setPattern = ref.setPattern, deletePattern = ref.deletePattern;

  fs = require('fs');

  httpProxy = require('http-proxy');

  module.exports = {
    run: function(options, $staticPath, $port, $portStatic) {
      var checkPattern, connect, proxy;
      if ($port == null) {
        $port = 9900;
      }
      if ($portStatic == null) {
        $portStatic = 8081;
      }
      checkPattern = function(url) {
        var k, ref1, v;
        ref1 = getPaterns();
        for (k in ref1) {
          v = ref1[k];
          if (url.match(k)) {
            return v;
          }
        }
      };
      proxy = httpProxy.createServer(options, function(req, res, next) {
        var $path;
        $path = checkPattern(req.url);
        console.log("URL: ==>  " + req.url);
        if (typeof $path === 'string') {
          if ($path && fs.existsSync($path)) {
            res.setHeader('Content-Type', 'application/json');
            res.statusCode = 200;
            res.write(fs.readFileSync($path));
            console.log('Load from cache: ' + req.url);
            return res.end();
          }
        } else if (typeof $path === 'object') {
          if ($path.src && fs.existsSync($path.src)) {
            res.statusCode = $path.status;
            res.write(fs.readFileSync($path.src));
            console.log('Load from cache: ' + req.url);
            return res.end();
          }
        }
        return next();
      });
      proxy.listen($port);
      console.log("Start proxy on port: " + $port);
      if ($staticPath) {
        connect = require('connect');
        return wconnect.createServer(connect.favicon(), connect["static"]($staticPath)).listen($portStatic);
      }
    }
  };

}).call(this);
